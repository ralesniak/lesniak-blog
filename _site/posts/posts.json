[
  {
    "path": "posts/2020-10-11-fhwa-vmt/",
    "title": "Viz Makeover: VMT during the Pandemic",
    "description": "Making over a viz using FHWA data",
    "author": [],
    "date": "2020-10-11",
    "categories": [
      "viz"
    ],
    "contents": "\nAs a continuation of my last post, I made-over another viz I saw on Twitter. This time, it was a chart from Eno Center for Transportation using Federal Highway Administration data. Unfortunately, I cannot find the original chart.\nSetup\nI chose my fonts and colors to match the Eno branding.\nThen I included a tribble of data I copied and pasted from the FHWA PDF. While I could have read this in and munged it in R, I went with a quicker drop-in.\n\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(showtext)\nlibrary(ggtext)\n\n\n# Fonts\n\nfont_add_google(name = \"Spartan\", family = \"spartan\")\nfont_add_google(name = \"Roboto\", family = \"roboto\")\nshowtext_auto()\n\n# Colors\n\nbg_gray <- \"#f4f4f4\"\naxis_line_gray <- \"#B8B8B8\"\n\nhighlight_1 <- \"#1d3557\"\nhighlight_2 <- \"#e63946\" \n\n# FHWA Data\n\n## data source\n## data in BILLIONS\n\nvmt_data <- tibble::tribble(\n              ~category, ~year, ~JAN, ~FEB, ~MAR,  ~APR,  ~MAY, ~JUN,  ~JUL, ~AUG, ~SEP,  ~OCT, ~NOV, ~DEC,\n    \"Rural Interstate\", 2019L, 18.7, 16.8, 20.9,    22,  23.1,   23,  25.4, 24.2, 21.5,  22.4, 20.5, 21.7,\n\"Rural Other Arterial\", 2019L, 27.6, 25.7,   31,  32.3,  33.6, 33.8,  36.7, 35.2, 32.9,  33.9, 30.3, 31.2,\n          \"Other Rural\", 2019L, 25.1, 22.8,   28,    30,  30.7, 30.5,  32.7, 31.4, 29.2,  30.3, 26.8, 27.5,\n    \"Urban Interstate\", 2019L, 43.9, 39.8, 48.1,  48.9,  50.3, 50.5,  49.9, 49.8, 47.9,  49.3, 47.1, 49.7,\n\"Urban Other Arterial\", 2019L, 90.4,   83, 97.8, 100.6, 100.5, 97.4, 102.5, 99.9, 95.8, 101.8, 92.5, 98.3,\n          \"Other Urban\", 2019L, 42.5, 38.7, 45.7,  47.6,  47.8, 45.8,  48.4, 46.2, 44.5,  46.1, 43.3, 45.7,\n  \"Rural Interstate\", 2020L, 19.2, 17.4, 16.8,  12.2,  16.9, 19.5,  22.2,   NA,   NA,    NA,   NA,   NA,\n\"Rural Other Arterial\", 2020L, 28.3, 26.4, 25.8,  20.4,  26.4, 30.6,  33.5,   NA,   NA,    NA,   NA,   NA,\n          \"Other Rural\", 2020L, 25.6, 23.3, 23.5,    20,  24.6, 27.9,  30.6,   NA,   NA,    NA,   NA,   NA,\n    \"Urban Interstate\", 2020L, 44.9, 40.7, 37.8,  26.9,    35, 41.8,  42.5,   NA,   NA,    NA,   NA,   NA,\n \"Urban Other Arterial\", 2020L,   92, 84.6, 78.6,  59.5,  73.7, 83.8,  90.4,   NA,   NA,    NA,   NA,   NA,\n         \"Other Urban\", 2020L, 43.6, 39.5, 37.6,  29.4,  36.1, 40.3,  43.2,   NA,   NA,    NA,   NA,   NA\n  )\n\n\n\nReshape data\nBecause the data is wide with each month as its own column, I reshaped it into long data for plotting.\nI also combined the categories into Rural and Urban to create two lines.\nThen, I specified the colors I wanted for the two categories.\n\n\n#reshape from wide to tidy\nvmt_reshaped <- vmt_data %>%\n  pivot_longer(cols = -c(\"category\", \"year\"), names_to = \"month_char\") %>%\n  mutate(year_month = ymd(glue::glue(\"{year}-{month_char}-01\"))) %>%\n  filter(!is.na(value)) %>%\n  #create a general category to summarize\n  mutate(general_category = if_else(str_detect(category, \"Rural\"), \"Rural\", \"Urban\")) %>%\n  #split out into two lines to compare year-to-year\n  group_by(year_month) %>%\n  summarize(value = sum(value)) %>%\n  mutate(month = month(year_month, label = TRUE),\n         year = as.character(year(year_month)),\n         chart_color = if_else(year == \"2019\", highlight_1, highlight_2))\n\n\n\nPlotting\nFor the plot, I kept the line chart and specified the color and groupings.\nI made the y-axis more specific and quick to read.\nI avoided using a legend and instead included the year colors in the subtitle.\nLastly, I included a descriptive title of the key takeaway.\n\n\nvmt_chart <- vmt_reshaped  %>%\n  ggplot(aes(x = month, y = value, color = chart_color, group = year)) +\n  geom_line(size = 1) +\n  scale_color_identity() +\n  scale_y_continuous(limits = c(100, NA),\n    labels = scales::number_format(suffix = \"B\")) +\n  labs(title = \"Traffic is stabilizing after COVID-related plunge\",\n       subtitle = glue::glue(\"Monthly vehicle miles (urban and rural), \n       <b style='color:{highlight_1}'>2019<\/b> compared to \n       <b style='color:{highlight_2}'>2020<\/b>\"),\n       caption = \"Source: Federal Highway Administration, July 2020\") +\n  theme_classic(base_size = 16) +\n  theme(\n    #align title left\n    plot.title.position = \"plot\",\n    #colors and fonts\n    text = element_text(family = \"roboto\"),\n    plot.background = element_rect(fill = bg_gray),\n    panel.background = element_rect(fill = bg_gray,\n                                    colour = bg_gray),\n    axis.line = element_line(color = axis_line_gray),\n    plot.title = element_text(family = \"spartan\", face = \"bold\", size = 17),\n    plot.subtitle = element_markdown(family = \"spartan\", size = 13),\n    axis.text.y = element_text(),\n    #no annoying stuff\n    axis.title = element_blank(),\n    legend.position = \"none\"\n  )\n\nvmt_chart\n\n\n\n\nThis is still a relatively plain chart, and I probably could create a more complicated analysis with this data. But in my original tweet, I included a call to action:\n\nA reminder that just because traffic is down doesn’t mean it’s down forever… We need to use this opp[ortunity] for permanent design changes to prioritize people over cars.\n\nExport\nFinally time to export to a Twitter-appropriate size.\n\n\n# Export in Twitter Size --------------------------------------------------\n\npng(filename = \"vmt_chart.png\",\n    width = 600,\n    height = 335)\nvmt_chart\ndev.off()\n\n\nquartz_off_screen \n                2 \n\n\n\n\n",
    "preview": "posts/2020-10-11-fhwa-vmt/2020-10-11-fhwa-vmt_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-07-18T16:43:59-04:00",
    "input_file": "2020-10-11-fhwa-vmt.knit.md",
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2020-09-19-viz-makeover/",
    "title": "Viz Makeover: Survey of Public Transit Agencies",
    "description": "Making over a viz from APTA",
    "author": [],
    "date": "2020-09-19",
    "categories": [
      "viz"
    ],
    "contents": "\nContext and audience mean so much for data visualization. On Twitter, I sometimes see charts that have great information but aren’t optimized for the Twitter experience. Some common missed opportunities:\nThey’re too big, so the Twitter crop hides the important parts\nThe title doesn’t give the big idea, so it’s easy to scroll on by\nThe viz doesn’t take advantage of branding to associate the analysis with the organization\nSometimes I’m inspired to make charts over to be more Twitter-friendly, mostly for my own fun. Here’s one I did using a survey of American public transit agencies by the American Public Transportation Association.\nSetup\nI’m only using three packages today - tidyverse as the anchor, showtext for custom fonts, and ggtext for colorizing the category labels.\nThe original viz had the data points in the image, so I made a quick tribble to capture the data.\n\n\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(ggtext)\n\n#Fonts\nfont_add_google(name = \"Roboto\", family = \"roboto\")\nfont_add_google(name = \"Rubik\", family = \"rubik\")\nshowtext_auto()\n\n# APTA Data\n\napta_data <- tibble::tribble(\n                                    ~category, ~value,\n                           \"Eliminate Routes\",   0.38,\n                     \"Reduce Days of Service\",   0.20,\n                                \"Cut Service\",   0.61,\n                             \"Furlough Staff\",   0.23,\n                              \"Lay Off Staff\",   0.31,\n                             \"Increase Fares\",   0.17,\n  \"Delay, Defer, or Cancel Vehicle Purchases\",   0.33,\n   \"Delay, Defer, or Cancel Capital Projects\",   0.45\n  )\n\n\n\nOrganize data\nI love using ggtext to make the category labels pop, but it takes a tiny bit of set up.\nFirst, I name all the colors, which I copied from the APTA website to match the branding.\nThen, I mutate() to make a highlight column to specify the color.\nA second mutate() plus some basic HTML makes a new label column that will be called in the chart.\nI also fct_reorder() the data based on percentage value.\n\n\n# colors\nbg_gray <- \"#F5F5F5\"\naxis_line_gray <- \"#B8B8B8\"\nother_gray <- \"#474747\"\n\nhighlight_1 <- \"#650533\" #apta maroon\nhighlight_2 <- \"#094279\" #apta blue\n\n#add in new columns re: color and labels\n\nplot_data <- apta_data %>%\n  mutate(\n    highlight = case_when(\n      category == \"Cut Service\" ~ highlight_1,\n      str_detect(category, \"Capital\") ~ highlight_2,\n      TRUE ~   other_gray\n    ),\n    category_label = \n      glue::glue(\"<span style ='color:{highlight}'>{category}<\/span>\"),\n    category_label = fct_reorder(category_label, value)\n  )\n\n\n\nPlotting\nNow it’s time to make a chart!\nI kept the column chart style and kept the value on the x-axis.\nThe y-axis became the category_label and requires element_markdown() in the theme to render the HTML.\nThen, for the fill, I used the highlight column along with scale_fill_identity(). The bars also print from largest to smallest value because of the factor created in the step above.\nA big title and subtitle explain the chart. It took some trial and error to get the right size font plus using <br> for some manual spacings. These also require element_markdown() in the theme.\nI use some custom Google fonts to spice up the default san serif.\n\n\n# the chart!\nnew_plot <- plot_data %>%\n  ggplot(aes(x = value, y = category_label, fill = highlight)) +\n  geom_col() +\n  scale_x_continuous(labels = scales::percent_format()) +\n  scale_fill_identity() +\n  labs(title = glue::glue(\"Without emergency funding from Congress, \n  your transit agency<br>might <span style='color:{highlight_1}'>cut \n  service<\/span> or <span style='color:{highlight_2}'>delay \n  infrastructure projects<\/span>\"),\n       subtitle = \"Percent of transit agencies that said they were \n                  considering the following actions\",\n       caption = \"n = 128<br>Source: APTA.com, Sep 2020\") +\n  theme_classic(base_size = 12) +\n  theme(\n    #align title left\n    plot.title.position = \"plot\",\n    #colors and fonts\n    text = element_text(family = \"rubik\"),\n    plot.background = element_rect(fill = bg_gray),\n    panel.background = element_rect(fill = bg_gray,\n                                    colour = bg_gray),\n    axis.line = element_line(color = axis_line_gray),\n    plot.title = element_markdown(family = \"roboto\", \n                                  face = \"bold\"),\n    plot.subtitle = element_markdown(family = \"roboto\"),\n    plot.caption = element_markdown(), \n    axis.text.y = element_markdown(),\n    #no annoying stuff\n    axis.title = element_blank(),\n    legend.position = \"none\"\n    )\n\nnew_plot\n\n\n\n\nI’m pretty happy with this! I wish APTA colors were a little more dynamic, but this chart gets the main idea across faster.\nExport\nThen, to export, a blank PNG is created and the plot is printed on top. This is different than ggsave() because of the custom fonts. I made the PNG the size of the Twitter cropped image so nothing would be lost.\n\n\n# Export Plot\n\n# {showtext} requires these steps, no ggsave available\n\npng(filename = \"new_plot.png\",\n    width = 600,\n    height = 335)\nnew_plot\ndev.off()\n\n\n\n\n\n\n",
    "preview": "posts/2020-09-19-viz-makeover/2020-09-19-viz-makeover_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-07-18T14:01:18-04:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  }
]
